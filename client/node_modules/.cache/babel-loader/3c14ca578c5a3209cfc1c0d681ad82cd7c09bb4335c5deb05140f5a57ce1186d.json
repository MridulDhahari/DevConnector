{"ast":null,"code":"import axios from 'axios';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from './types';\nimport { setAlert } from './alert';\nimport setAuthToken from '../utils/setAuthToken';\n\n//load user\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n//register user\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n  try {\n    const res = await axios.post('api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\n\n//login user\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  try {\n    const res = await axios.post('api/auth', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n//Logout / clear\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"names":["axios","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","setAlert","setAuthToken","loadUser","dispatch","localStorage","token","res","get","type","payload","data","err","register","name","email","password","config","headers","body","JSON","stringify","post","errors","response","forEach","error","msg","login","logout"],"sources":["C:/Users/Dell/OneDrive/Desktop/devconnector/client/src/actions/auth.js"],"sourcesContent":["import axios from 'axios';\r\nimport {REGISTER_SUCCESS,REGISTER_FAIL,USER_LOADED,AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT\r\n} from './types';\r\nimport {setAlert} from './alert';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n//load user\r\nexport const loadUser = () => async dispatch => {\r\n    if(localStorage.token){\r\n        setAuthToken(localStorage.token);\r\n    }\r\n    try{\r\n        const res= await axios.get('/api/auth');\r\n        dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data\r\n        })\r\n    }catch(err){\r\n        dispatch({\r\n            type: AUTH_ERROR\r\n        });\r\n\r\n    }\r\n}\r\n\r\n//register user\r\nexport const register = ({name,email,password}) => async dispatch =>{\r\n    const config = {\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({name,email,password});\r\n\r\n    try{\r\n        const res = await axios.post('api/users',body,config);\r\n        dispatch({\r\n            type : REGISTER_SUCCESS,\r\n            payload: res.data\r\n        });\r\n        dispatch(loadUser());\r\n    \r\n    }catch(err){\r\n        const errors = err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg,'danger')));\r\n        }\r\n        dispatch({\r\n            type: REGISTER_FAIL\r\n        });\r\n    }\r\n}\r\n\r\n//login user\r\nexport const login = (email,password) => async dispatch =>{\r\n    const config = {\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({email,password});\r\n\r\n    try{\r\n        const res = await axios.post('api/auth',body,config);\r\n        dispatch({\r\n            type : LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n        dispatch(loadUser());\r\n    }catch(err){\r\n        const errors = err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg,'danger')));\r\n        }\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n        });\r\n    }\r\n}\r\n\r\n//Logout / clear\r\nexport const logout = () => dispatch => {\r\n    dispatch({ type: LOGOUT });\r\n}\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,gBAAgB,EAACC,aAAa,EAACC,WAAW,EAACC,UAAU,EACzDC,aAAa,EACbC,UAAU,EACVC,MAAM,QACH,SAAS;AAChB,SAAQC,QAAQ,QAAO,SAAS;AAChC,OAAOC,YAAY,MAAM,uBAAuB;;AAEhD;AACA,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM,MAAMC,QAAQ,IAAI;EAC5C,IAAGC,YAAY,CAACC,KAAK,EAAC;IAClBJ,YAAY,CAACG,YAAY,CAACC,KAAK,CAAC;EACpC;EACA,IAAG;IACC,MAAMC,GAAG,GAAE,MAAMd,KAAK,CAACe,GAAG,CAAC,WAAW,CAAC;IACvCJ,QAAQ,CAAC;MACLK,IAAI,EAAEb,WAAW;MACjBc,OAAO,EAAEH,GAAG,CAACI;IACjB,CAAC,CAAC;EACN,CAAC,QAAMC,GAAG,EAAC;IACPR,QAAQ,CAAC;MACLK,IAAI,EAAEZ;IACV,CAAC,CAAC;EAEN;AACJ,CAAC;;AAED;AACA,OAAO,MAAMgB,QAAQ,GAAGA,CAAC;EAACC,IAAI;EAACC,KAAK;EAACC;AAAQ,CAAC,KAAK,MAAMZ,QAAQ,IAAG;EAChE,MAAMa,MAAM,GAAG;IACXC,OAAO,EAAC;MACJ,cAAc,EAAE;IACpB;EACJ,CAAC;EAED,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;IAACP,IAAI;IAACC,KAAK;IAACC;EAAQ,CAAC,CAAC;EAElD,IAAG;IACC,MAAMT,GAAG,GAAG,MAAMd,KAAK,CAAC6B,IAAI,CAAC,WAAW,EAACH,IAAI,EAACF,MAAM,CAAC;IACrDb,QAAQ,CAAC;MACLK,IAAI,EAAGf,gBAAgB;MACvBgB,OAAO,EAAEH,GAAG,CAACI;IACjB,CAAC,CAAC;IACFP,QAAQ,CAACD,QAAQ,CAAC,CAAC,CAAC;EAExB,CAAC,QAAMS,GAAG,EAAC;IACP,MAAMW,MAAM,GAAGX,GAAG,CAACY,QAAQ,CAACb,IAAI,CAACY,MAAM;IACvC,IAAGA,MAAM,EAAC;MACNA,MAAM,CAACE,OAAO,CAACC,KAAK,IAAItB,QAAQ,CAACH,QAAQ,CAACyB,KAAK,CAACC,GAAG,EAAC,QAAQ,CAAC,CAAC,CAAC;IACnE;IACAvB,QAAQ,CAAC;MACLK,IAAI,EAAEd;IACV,CAAC,CAAC;EACN;AACJ,CAAC;;AAED;AACA,OAAO,MAAMiC,KAAK,GAAGA,CAACb,KAAK,EAACC,QAAQ,KAAK,MAAMZ,QAAQ,IAAG;EACtD,MAAMa,MAAM,GAAG;IACXC,OAAO,EAAC;MACJ,cAAc,EAAE;IACpB;EACJ,CAAC;EAED,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;IAACN,KAAK;IAACC;EAAQ,CAAC,CAAC;EAE7C,IAAG;IACC,MAAMT,GAAG,GAAG,MAAMd,KAAK,CAAC6B,IAAI,CAAC,UAAU,EAACH,IAAI,EAACF,MAAM,CAAC;IACpDb,QAAQ,CAAC;MACLK,IAAI,EAAGX,aAAa;MACpBY,OAAO,EAAEH,GAAG,CAACI;IACjB,CAAC,CAAC;IACFP,QAAQ,CAACD,QAAQ,CAAC,CAAC,CAAC;EACxB,CAAC,QAAMS,GAAG,EAAC;IACP,MAAMW,MAAM,GAAGX,GAAG,CAACY,QAAQ,CAACb,IAAI,CAACY,MAAM;IACvC,IAAGA,MAAM,EAAC;MACNA,MAAM,CAACE,OAAO,CAACC,KAAK,IAAItB,QAAQ,CAACH,QAAQ,CAACyB,KAAK,CAACC,GAAG,EAAC,QAAQ,CAAC,CAAC,CAAC;IACnE;IACAvB,QAAQ,CAAC;MACLK,IAAI,EAAEV;IACV,CAAC,CAAC;EACN;AACJ,CAAC;;AAED;AACA,OAAO,MAAM8B,MAAM,GAAGA,CAAA,KAAMzB,QAAQ,IAAI;EACpCA,QAAQ,CAAC;IAAEK,IAAI,EAAET;EAAO,CAAC,CAAC;AAC9B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}