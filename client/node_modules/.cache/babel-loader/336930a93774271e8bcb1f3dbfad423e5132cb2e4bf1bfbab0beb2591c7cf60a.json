{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\devconnector\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// import React,{Fragment, useEffect} from 'react'\n// import PropTypes from 'prop-types'\n// import {connect} from 'react-redux'\n// import {Link} from 'react-router-dom';\n// import { getCurrentProfile } from '../../actions/profile'\n// import Spinner from '../layout/Spinner'\n\n// const Dashboard = ({getCurrentProfile,auth:{user},profile:{loading,profile}}) => {\n//   useEffect(()=>{\n//     getCurrentProfile();\n//   },[]);\n//   return loading && profile===null ? (<Spinner/>): (\n//     <Fragment>\n//     <h1 className=\"large text-primary\">Dashboard</h1>\n//     <p className='lead'>\n//     <i className='fas fa-user'></i>Welcome {user && user.name}\n//     </p>\n//     {profile!==null ? <Fragment>has</Fragment> : \n//     <Fragment>\n//     <p>You hae not yet setup a profile, please add some information</p>\n//     <Link to='/create-profile' className='bt btn-primary my-1'>\n//       Create Profile\n//     </Link>\n//     </Fragment>}\n\n//   </Fragment>\n//   );\n\n// }\n\n// Dashboard.propTypes = {\n//   getCurrentProfile: PropTypes.func.isRequired,\n//   auth: PropTypes.object.isRequired,\n//   profile: PropTypes.object.isRequired,\n// }\n\n// const mapStateToProps = state => ({\n//   auth: state.auth,\n//   profile: state.profile\n// })\n\n// export default connect(mapStateToProps,{getCurrentProfile})(Dashboard);\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DashboardActions from './DashboardActions';\nimport Experience from './Experience';\nimport Education from './Education';\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  getCurrentProfile,\n  deleteAccount,\n  auth: {\n    user\n  },\n  profile: {\n    profile\n  }\n}) => {\n  _s();\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), \" Welcome \", user && user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), profile !== null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(DashboardActions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Experience, {\n        experience: profile.experience\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Education, {\n        education: profile.education\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-2\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: () => deleteAccount(),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-user-minus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), \" Delete My Account\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You have not yet setup a profile, please add some info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/create-profile\",\n        className: \"btn btn-primary my-1\",\n        children: \"Create Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Dashboard;\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\nexport default connect(mapStateToProps, {\n  getCurrentProfile,\n  deleteAccount\n})(Dashboard);\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","Link","PropTypes","connect","DashboardActions","Experience","Education","getCurrentProfile","deleteAccount","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","auth","user","profile","_s","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","experience","education","onClick","to","_c","propTypes","func","isRequired","object","mapStateToProps","state","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/devconnector/client/src/components/dashboard/Dashboard.js"],"sourcesContent":["// import React,{Fragment, useEffect} from 'react'\r\n// import PropTypes from 'prop-types'\r\n// import {connect} from 'react-redux'\r\n// import {Link} from 'react-router-dom';\r\n// import { getCurrentProfile } from '../../actions/profile'\r\n// import Spinner from '../layout/Spinner'\r\n\r\n\r\n// const Dashboard = ({getCurrentProfile,auth:{user},profile:{loading,profile}}) => {\r\n//   useEffect(()=>{\r\n//     getCurrentProfile();\r\n//   },[]);\r\n//   return loading && profile===null ? (<Spinner/>): (\r\n//     <Fragment>\r\n//     <h1 className=\"large text-primary\">Dashboard</h1>\r\n//     <p className='lead'>\r\n//     <i className='fas fa-user'></i>Welcome {user && user.name}\r\n//     </p>\r\n//     {profile!==null ? <Fragment>has</Fragment> : \r\n//     <Fragment>\r\n//     <p>You hae not yet setup a profile, please add some information</p>\r\n//     <Link to='/create-profile' className='bt btn-primary my-1'>\r\n//       Create Profile\r\n//     </Link>\r\n//     </Fragment>}\r\n    \r\n//   </Fragment>\r\n//   );\r\n \r\n// }\r\n\r\n// Dashboard.propTypes = {\r\n//   getCurrentProfile: PropTypes.func.isRequired,\r\n//   auth: PropTypes.object.isRequired,\r\n//   profile: PropTypes.object.isRequired,\r\n// }\r\n\r\n// const mapStateToProps = state => ({\r\n//   auth: state.auth,\r\n//   profile: state.profile\r\n// })\r\n\r\n// export default connect(mapStateToProps,{getCurrentProfile})(Dashboard);\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport DashboardActions from './DashboardActions';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\r\n\r\nconst Dashboard = ({\r\n  getCurrentProfile,\r\n  deleteAccount,\r\n  auth: { user },\r\n  profile: { profile }\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, [getCurrentProfile]);\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <h1 className=\"large text-primary\">Dashboard</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Welcome {user && user.name}\r\n      </p>\r\n      {profile !== null ? (\r\n        <>\r\n          <DashboardActions />\r\n          <Experience experience={profile.experience} />\r\n          <Education education={profile.education} />\r\n\r\n          <div className=\"my-2\">\r\n            <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\r\n              <i className=\"fas fa-user-minus\" /> Delete My Account\r\n            </button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <p>You have not yet setup a profile, please add some info</p>\r\n          <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\r\n            Create Profile\r\n          </Link>\r\n        </>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\r\n  Dashboard\r\n);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}