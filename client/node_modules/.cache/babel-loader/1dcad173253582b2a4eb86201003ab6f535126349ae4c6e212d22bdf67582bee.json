{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, PROFILE_ERROR } from './types';\n\n//GEt current users profile\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n//Create or update a profile\n// export const createProfile = (formData,history,edit=false)=> async dispatch => {\n//     try{\n//         const config = {\n//             headers:{\n//                 'Content-Type':'application/json'\n//             }\n//         }\n//         const res = await axios.post('/api/profile',formData,config);\n//         dispatch({\n//             type: GET_PROFILE,\n//             payload: res.data\n//         });\n//         dispatch(setAlert(edit ? 'Profile Updated':'Profile Created') );\n//         if(!edit){\n//             history.push('/dashboard');\n//         }\n//     }catch(err){\n\n//         const errors = err.response.data.errors;\n//         if(errors){\n//             errors.forEach(error => dispatch(setAlert(error.msg,'danger')));\n//         }\n\n//         dispatch({\n//             type: PROFILE_ERROR,\n//             payload: {msg: err.response.statusText, status:err.response.status}\n//         });\n\n//     }\n// }\n\nexport const createProfile = (formData, edit = false) => async dispatch => {\n  try {\n    const res = await api.post('/profile', formData);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","createProfile","formData","edit","api","post","errors","forEach","error"],"sources":["C:/Users/Dell/OneDrive/Desktop/devconnector/client/src/actions/profile.js"],"sourcesContent":["import axios from 'axios';\r\nimport {setAlert} from './alert';\r\n\r\nimport {\r\n    GET_PROFILE,\r\n    PROFILE_ERROR\r\n} from './types';\r\n\r\n//GEt current users profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try{\r\n        const res = await axios.get('/api/profile/me');\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        })\r\n    }catch(err){\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status:err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n//Create or update a profile\r\n// export const createProfile = (formData,history,edit=false)=> async dispatch => {\r\n//     try{\r\n//         const config = {\r\n//             headers:{\r\n//                 'Content-Type':'application/json'\r\n//             }\r\n//         }\r\n//         const res = await axios.post('/api/profile',formData,config);\r\n//         dispatch({\r\n//             type: GET_PROFILE,\r\n//             payload: res.data\r\n//         });\r\n//         dispatch(setAlert(edit ? 'Profile Updated':'Profile Created') );\r\n//         if(!edit){\r\n//             history.push('/dashboard');\r\n//         }\r\n//     }catch(err){\r\n\r\n//         const errors = err.response.data.errors;\r\n//         if(errors){\r\n//             errors.forEach(error => dispatch(setAlert(error.msg,'danger')));\r\n//         }\r\n\r\n//         dispatch({\r\n//             type: PROFILE_ERROR,\r\n//             payload: {msg: err.response.statusText, status:err.response.status}\r\n//         });\r\n\r\n//     }\r\n// }\r\n\r\n\r\nexport const createProfile =\r\n  (formData, edit = false) =>\r\n  async (dispatch) => {\r\n    try {\r\n      const res = await api.post('/profile', formData);\r\n\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data\r\n      });\r\n\r\n      dispatch(\r\n        setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success')\r\n      );\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n      }\r\n\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n      });\r\n    }\r\n  };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,QAAO,SAAS;AAEhC,SACIC,WAAW,EACXC,aAAa,QACV,SAAS;;AAEhB;AACA,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM,MAAMC,QAAQ,IAAI;EACrD,IAAG;IACC,MAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,iBAAiB,CAAC;IAC9CF,QAAQ,CAAC;MACLG,IAAI,EAAEN,WAAW;MACjBO,OAAO,EAAEH,GAAG,CAACI;IACjB,CAAC,CAAC;EACN,CAAC,QAAMC,GAAG,EAAC;IACPN,QAAQ,CAAC;MACLG,IAAI,EAAEL,aAAa;MACnBM,OAAO,EAAE;QAACG,GAAG,EAAED,GAAG,CAACE,QAAQ,CAACC,UAAU;QAAEC,MAAM,EAACJ,GAAG,CAACE,QAAQ,CAACE;MAAM;IACtE,CAAC,CAAC;EACN;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAGA,OAAO,MAAMC,aAAa,GACxBA,CAACC,QAAQ,EAAEC,IAAI,GAAG,KAAK,KACvB,MAAOb,QAAQ,IAAK;EAClB,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMa,GAAG,CAACC,IAAI,CAAC,UAAU,EAAEH,QAAQ,CAAC;IAEhDZ,QAAQ,CAAC;MACPG,IAAI,EAAEN,WAAW;MACjBO,OAAO,EAAEH,GAAG,CAACI;IACf,CAAC,CAAC;IAEFL,QAAQ,CACNJ,QAAQ,CAACiB,IAAI,GAAG,iBAAiB,GAAG,iBAAiB,EAAE,SAAS,CAClE,CAAC;EACH,CAAC,CAAC,OAAOP,GAAG,EAAE;IACZ,MAAMU,MAAM,GAAGV,GAAG,CAACE,QAAQ,CAACH,IAAI,CAACW,MAAM;IAEvC,IAAIA,MAAM,EAAE;MACVA,MAAM,CAACC,OAAO,CAAEC,KAAK,IAAKlB,QAAQ,CAACJ,QAAQ,CAACsB,KAAK,CAACX,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC;IACpE;IAEAP,QAAQ,CAAC;MACPG,IAAI,EAAEL,aAAa;MACnBM,OAAO,EAAE;QAAEG,GAAG,EAAED,GAAG,CAACE,QAAQ,CAACC,UAAU;QAAEC,MAAM,EAAEJ,GAAG,CAACE,QAAQ,CAACE;MAAO;IACvE,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}